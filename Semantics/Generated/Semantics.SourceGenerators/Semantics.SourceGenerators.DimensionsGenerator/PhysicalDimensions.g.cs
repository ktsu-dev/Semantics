// Copyright (c) ktsu.dev
// All rights reserved.
// Licensed under the MIT license.
// <auto-generated />

namespace ktsu.Semantics;

using System.Collections.Generic;
using System.Collections.Frozen;

/// <summary>
/// Dimension information record
/// </summary>
public record DimensionInfo(string Name, string Symbol, Dictionary<string, int> DimensionalFormula, List<string> Quantities);

/// <summary>
/// Static registry of physical dimensions.
/// </summary>
public static class PhysicalDimensions
{
	/// <summary>Absorbed dose of ionizing radiation.</summary>
	public static readonly DimensionInfo AbsorbedDose = new(
		Name: "AbsorbedDose",
		Symbol: "L² T⁻²",
		DimensionalFormula: new Dictionary<string, int> {
			["length"] = 2,
			["time"] = -2,
		},
		Quantities: new List<string> { "AbsorbedDose" }
	);

	/// <summary>Acceleration is the rate of change of velocity with respect to time.</summary>
	public static readonly DimensionInfo Acceleration = new(
		Name: "Acceleration",
		Symbol: "L T⁻²",
		DimensionalFormula: new Dictionary<string, int> {
			["length"] = 1,
			["time"] = -2,
		},
		Quantities: new List<string> { "Acceleration" }
	);

	/// <summary>Number of elementary entities (atoms, molecules, ions) in a sample.</summary>
	public static readonly DimensionInfo AmountOfSubstance = new(
		Name: "AmountOfSubstance",
		Symbol: "N",
		DimensionalFormula: new Dictionary<string, int> {
			["amountOfSubstance"] = 1,
		},
		Quantities: new List<string> { "AmountOfSubstance" }
	);

	/// <summary>Angular acceleration magnitude - absolute rate of change of angular velocity.</summary>
	public static readonly DimensionInfo AngularAcceleration = new(
		Name: "AngularAcceleration",
		Symbol: "T⁻²",
		DimensionalFormula: new Dictionary<string, int> {
			["time"] = -2,
		},
		Quantities: new List<string> { "AngularAcceleration" }
	);

	/// <summary>Angular displacement magnitude - absolute angle rotated.</summary>
	public static readonly DimensionInfo AngularDisplacement = new(
		Name: "AngularDisplacement",
		Symbol: "1",
		DimensionalFormula: new Dictionary<string, int>(),
		Quantities: new List<string> { "AngularDisplacement" }
	);

	/// <summary>Angular jerk is the rate of change of angular acceleration with respect to time.</summary>
	public static readonly DimensionInfo AngularJerk = new(
		Name: "AngularJerk",
		Symbol: "T⁻³",
		DimensionalFormula: new Dictionary<string, int> {
			["time"] = -3,
		},
		Quantities: new List<string> { "AngularJerk" }
	);

	/// <summary>Angular momentum magnitude - absolute rotational momentum.</summary>
	public static readonly DimensionInfo AngularMomentum = new(
		Name: "AngularMomentum",
		Symbol: "M L² T⁻¹",
		DimensionalFormula: new Dictionary<string, int> {
			["mass"] = 1,
			["length"] = 2,
			["time"] = -1,
		},
		Quantities: new List<string> { "AngularMomentum" }
	);

	/// <summary>Angular velocity magnitude - absolute rate of rotation.</summary>
	public static readonly DimensionInfo AngularVelocity = new(
		Name: "AngularVelocity",
		Symbol: "T⁻¹",
		DimensionalFormula: new Dictionary<string, int> {
			["time"] = -1,
		},
		Quantities: new List<string> { "AngularVelocity" }
	);

	/// <summary>Extent of a surface or region in two-dimensional space.</summary>
	public static readonly DimensionInfo Area = new(
		Name: "Area",
		Symbol: "L²",
		DimensionalFormula: new Dictionary<string, int> {
			["length"] = 2,
		},
		Quantities: new List<string> { "Area" }
	);

	/// <summary>Amount of a substance present in a given volume of solution.</summary>
	public static readonly DimensionInfo Concentration = new(
		Name: "Concentration",
		Symbol: "N L⁻³",
		DimensionalFormula: new Dictionary<string, int> {
			["amountOfSubstance"] = 1,
			["length"] = -3,
		},
		Quantities: new List<string> { "Concentration" }
	);

	/// <summary>Density is mass per unit volume.</summary>
	public static readonly DimensionInfo Density = new(
		Name: "Density",
		Symbol: "M L⁻³",
		DimensionalFormula: new Dictionary<string, int> {
			["mass"] = 1,
			["length"] = -3,
		},
		Quantities: new List<string> { "Density" }
	);

	/// <summary>Pure number or ratio without physical units, including angles, ratios, and counts.</summary>
	public static readonly DimensionInfo Dimensionless = new(
		Name: "Dimensionless",
		Symbol: "1",
		DimensionalFormula: new Dictionary<string, int>(),
		Quantities: new List<string> { "Dimensionless" }
	);

	/// <summary>Ability of a system to store electric charge per unit voltage.</summary>
	public static readonly DimensionInfo ElectricCapacitance = new(
		Name: "ElectricCapacitance",
		Symbol: "M⁻¹ L⁻² T⁴ I²",
		DimensionalFormula: new Dictionary<string, int> {
			["mass"] = -1,
			["length"] = -2,
			["time"] = 4,
			["electricCurrent"] = 2,
		},
		Quantities: new List<string> { "ElectricCapacitance" }
	);

	/// <summary>Fundamental property of matter that causes electromagnetic interactions.</summary>
	public static readonly DimensionInfo ElectricCharge = new(
		Name: "ElectricCharge",
		Symbol: "I T",
		DimensionalFormula: new Dictionary<string, int> {
			["electricCurrent"] = 1,
			["time"] = 1,
		},
		Quantities: new List<string> { "ElectricCharge" }
	);

	/// <summary>Rate of flow of electric charge through a conductor or medium.</summary>
	public static readonly DimensionInfo ElectricCurrent = new(
		Name: "ElectricCurrent",
		Symbol: "I",
		DimensionalFormula: new Dictionary<string, int> {
			["electricCurrent"] = 1,
		},
		Quantities: new List<string> { "ElectricCurrent" }
	);

	/// <summary>Electric field strength - force per unit charge.</summary>
	public static readonly DimensionInfo ElectricField = new(
		Name: "ElectricField",
		Symbol: "M L T⁻³ I⁻¹",
		DimensionalFormula: new Dictionary<string, int> {
			["mass"] = 1,
			["length"] = 1,
			["time"] = -3,
			["electricCurrent"] = -1,
		},
		Quantities: new List<string> { "ElectricField" }
	);

	/// <summary>Work done per unit charge in moving a charge between two points.</summary>
	public static readonly DimensionInfo ElectricPotential = new(
		Name: "ElectricPotential",
		Symbol: "M L² T⁻³ I⁻¹",
		DimensionalFormula: new Dictionary<string, int> {
			["mass"] = 1,
			["length"] = 2,
			["time"] = -3,
			["electricCurrent"] = -1,
		},
		Quantities: new List<string> { "ElectricPotential" }
	);

	/// <summary>Opposition to the flow of electric current in a material.</summary>
	public static readonly DimensionInfo ElectricResistance = new(
		Name: "ElectricResistance",
		Symbol: "M L² T⁻³ I⁻²",
		DimensionalFormula: new Dictionary<string, int> {
			["mass"] = 1,
			["length"] = 2,
			["time"] = -3,
			["electricCurrent"] = -2,
		},
		Quantities: new List<string> { "ElectricResistance" }
	);

	/// <summary>Capacity of a system to perform work or produce change.</summary>
	public static readonly DimensionInfo Energy = new(
		Name: "Energy",
		Symbol: "M L² T⁻²",
		DimensionalFormula: new Dictionary<string, int> {
			["mass"] = 1,
			["length"] = 2,
			["time"] = -2,
		},
		Quantities: new List<string> { "Energy" }
	);

	/// <summary>Equivalent dose accounting for biological effectiveness.</summary>
	public static readonly DimensionInfo EquivalentDose = new(
		Name: "EquivalentDose",
		Symbol: "L² T⁻²",
		DimensionalFormula: new Dictionary<string, int> {
			["length"] = 2,
			["time"] = -2,
		},
		Quantities: new List<string> { "EquivalentDose" }
	);

	/// <summary>Interaction that changes the motion of an object, causing acceleration.</summary>
	public static readonly DimensionInfo Force = new(
		Name: "Force",
		Symbol: "M L T⁻²",
		DimensionalFormula: new Dictionary<string, int> {
			["mass"] = 1,
			["length"] = 1,
			["time"] = -2,
		},
		Quantities: new List<string> { "Force" }
	);

	/// <summary>Frequency is the rate of oscillation.</summary>
	public static readonly DimensionInfo Frequency = new(
		Name: "Frequency",
		Symbol: "T⁻¹",
		DimensionalFormula: new Dictionary<string, int> {
			["time"] = -1,
		},
		Quantities: new List<string> { "Frequency" }
	);

	/// <summary>Luminous flux incident on a surface per unit area.</summary>
	public static readonly DimensionInfo Illuminance = new(
		Name: "Illuminance",
		Symbol: "J L⁻²",
		DimensionalFormula: new Dictionary<string, int> {
			["luminousIntensity"] = 1,
			["length"] = -2,
		},
		Quantities: new List<string> { "Illuminance" }
	);

	/// <summary>Jerk is the rate of change of acceleration with respect to time.</summary>
	public static readonly DimensionInfo Jerk = new(
		Name: "Jerk",
		Symbol: "L T⁻³",
		DimensionalFormula: new Dictionary<string, int> {
			["length"] = 1,
			["time"] = -3,
		},
		Quantities: new List<string> { "Jerk" }
	);

	/// <summary>Length is the distance between two points.</summary>
	public static readonly DimensionInfo Length = new(
		Name: "Length",
		Symbol: "L",
		DimensionalFormula: new Dictionary<string, int> {
			["length"] = 1,
		},
		Quantities: new List<string> { "Length", "Position", "Displacement" }
	);

	/// <summary>Total quantity of visible light emitted by a source per unit time.</summary>
	public static readonly DimensionInfo LuminousFlux = new(
		Name: "LuminousFlux",
		Symbol: "J",
		DimensionalFormula: new Dictionary<string, int> {
			["luminousIntensity"] = 1,
		},
		Quantities: new List<string> { "LuminousFlux" }
	);

	/// <summary>Luminous power emitted by a light source in a particular direction per unit solid angle.</summary>
	public static readonly DimensionInfo LuminousIntensity = new(
		Name: "LuminousIntensity",
		Symbol: "J",
		DimensionalFormula: new Dictionary<string, int> {
			["luminousIntensity"] = 1,
		},
		Quantities: new List<string> { "LuminousIntensity" }
	);

	/// <summary>Mass is the quantity of matter in an object.</summary>
	public static readonly DimensionInfo Mass = new(
		Name: "Mass",
		Symbol: "M",
		DimensionalFormula: new Dictionary<string, int> {
			["mass"] = 1,
		},
		Quantities: new List<string> { "Mass" }
	);

	/// <summary>Measure of an object's resistance to changes in its rotation rate.</summary>
	public static readonly DimensionInfo MomentOfInertia = new(
		Name: "MomentOfInertia",
		Symbol: "M L²",
		DimensionalFormula: new Dictionary<string, int> {
			["mass"] = 1,
			["length"] = 2,
		},
		Quantities: new List<string> { "MomentOfInertia" }
	);

	/// <summary>Momentum is the product of mass and velocity.</summary>
	public static readonly DimensionInfo Momentum = new(
		Name: "Momentum",
		Symbol: "M L T⁻¹",
		DimensionalFormula: new Dictionary<string, int> {
			["mass"] = 1,
			["length"] = 1,
			["time"] = -1,
		},
		Quantities: new List<string> { "Momentum" }
	);

	/// <summary>Nuclear cross section - effective area for nuclear interactions.</summary>
	public static readonly DimensionInfo NuclearCrossSection = new(
		Name: "NuclearCrossSection",
		Symbol: "L²",
		DimensionalFormula: new Dictionary<string, int> {
			["length"] = 2,
		},
		Quantities: new List<string> { "NuclearCrossSection" }
	);

	/// <summary>Reciprocal of focal length, measuring the convergence or divergence of light.</summary>
	public static readonly DimensionInfo OpticalPower = new(
		Name: "OpticalPower",
		Symbol: "L⁻¹",
		DimensionalFormula: new Dictionary<string, int> {
			["length"] = -1,
		},
		Quantities: new List<string> { "OpticalPower" }
	);

	/// <summary>Rate of energy transfer or work performed per unit time.</summary>
	public static readonly DimensionInfo Power = new(
		Name: "Power",
		Symbol: "M L² T⁻³",
		DimensionalFormula: new Dictionary<string, int> {
			["mass"] = 1,
			["length"] = 2,
			["time"] = -3,
		},
		Quantities: new List<string> { "Power" }
	);

	/// <summary>Pressure is the force per unit area.</summary>
	public static readonly DimensionInfo Pressure = new(
		Name: "Pressure",
		Symbol: "M L⁻¹ T⁻²",
		DimensionalFormula: new Dictionary<string, int> {
			["mass"] = 1,
			["length"] = -1,
			["time"] = -2,
		},
		Quantities: new List<string> { "Pressure" }
	);

	/// <summary>Radioactive activity is the rate of radioactive decay.</summary>
	public static readonly DimensionInfo RadioactiveActivity = new(
		Name: "RadioactiveActivity",
		Symbol: "T⁻¹",
		DimensionalFormula: new Dictionary<string, int> {
			["time"] = -1,
		},
		Quantities: new List<string> { "RadioactiveActivity" }
	);

	/// <summary>Snap (or jounce) is the rate of change of jerk with respect to time.</summary>
	public static readonly DimensionInfo Snap = new(
		Name: "Snap",
		Symbol: "L T⁻⁴",
		DimensionalFormula: new Dictionary<string, int> {
			["length"] = 1,
			["time"] = -4,
		},
		Quantities: new List<string> { "Snap" }
	);

	/// <summary>Measure of the average kinetic energy of particles in a substance.</summary>
	public static readonly DimensionInfo Temperature = new(
		Name: "Temperature",
		Symbol: "Θ",
		DimensionalFormula: new Dictionary<string, int> {
			["temperature"] = 1,
		},
		Quantities: new List<string> { "Temperature" }
	);

	/// <summary>Time is the duration of an event.</summary>
	public static readonly DimensionInfo Time = new(
		Name: "Time",
		Symbol: "T",
		DimensionalFormula: new Dictionary<string, int> {
			["time"] = 1,
		},
		Quantities: new List<string> { "Time" }
	);

	/// <summary>Torque magnitude - absolute rotational force.</summary>
	public static readonly DimensionInfo Torque = new(
		Name: "Torque",
		Symbol: "M L² T⁻²",
		DimensionalFormula: new Dictionary<string, int> {
			["mass"] = 1,
			["length"] = 2,
			["time"] = -2,
		},
		Quantities: new List<string> { "Torque" }
	);

	/// <summary>Velocity is the rate of change of position with respect to time.</summary>
	public static readonly DimensionInfo Velocity = new(
		Name: "Velocity",
		Symbol: "L T⁻¹",
		DimensionalFormula: new Dictionary<string, int> {
			["length"] = 1,
			["time"] = -1,
		},
		Quantities: new List<string> { "Velocity" }
	);

	/// <summary>Amount of three-dimensional space enclosed within a boundary.</summary>
	public static readonly DimensionInfo Volume = new(
		Name: "Volume",
		Symbol: "L³",
		DimensionalFormula: new Dictionary<string, int> {
			["length"] = 3,
		},
		Quantities: new List<string> { "Volume" }
	);


	/// <summary>Gets a frozen collection of all standard physical dimensions.</summary>
	public static FrozenSet<DimensionInfo> All { get; } = new HashSet<DimensionInfo>(
		[
			AbsorbedDose,
			Acceleration,
			AmountOfSubstance,
			AngularAcceleration,
			AngularDisplacement,
			AngularJerk,
			AngularMomentum,
			AngularVelocity,
			Area,
			Concentration,
			Density,
			Dimensionless,
			ElectricCapacitance,
			ElectricCharge,
			ElectricCurrent,
			ElectricField,
			ElectricPotential,
			ElectricResistance,
			Energy,
			EquivalentDose,
			Force,
			Frequency,
			Illuminance,
			Jerk,
			Length,
			LuminousFlux,
			LuminousIntensity,
			Mass,
			MomentOfInertia,
			Momentum,
			NuclearCrossSection,
			OpticalPower,
			Power,
			Pressure,
			RadioactiveActivity,
			Snap,
			Temperature,
			Time,
			Torque,
			Velocity,
			Volume,
		]).ToFrozenSet();
}
